
package tm;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.1
 * Generated source version: 3.0
 * 
 */
@WebService(name = "IManager", targetNamespace = "http://managerserver")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IManager {


    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendIpsAndPortsToTM", targetNamespace = "http://managerserver", className = "tm.SendIpsAndPortsToTM")
    @ResponseWrapper(localName = "sendIpsAndPortsToTMResponse", targetNamespace = "http://managerserver", className = "tm.SendIpsAndPortsToTMResponse")
    @Action(input = "http://managerserver/IManager/sendIpsAndPortsToTMRequest", output = "http://managerserver/IManager/sendIpsAndPortsToTMResponse")
    public List<String> sendIpsAndPortsToTM();

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "receiveIpAndPortFromVector", targetNamespace = "http://managerserver", className = "tm.ReceiveIpAndPortFromVector")
    @ResponseWrapper(localName = "receiveIpAndPortFromVectorResponse", targetNamespace = "http://managerserver", className = "tm.ReceiveIpAndPortFromVectorResponse")
    @Action(input = "http://managerserver/IManager/receiveIpAndPortFromVectorRequest", output = "http://managerserver/IManager/receiveIpAndPortFromVectorResponse")
    public int receiveIpAndPortFromVector(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

}
